image: mcr.microsoft.com/dotnet/core/sdk:3.1

stages:
    #- build
    #- test
    - deploy

variables:
    apiProjectPATH: "src/ISUCore.Web.Host"
    apiProjectName: "ISUCore.Web.Host.csproj"
    dbProjectPATH: "src/ISUCore.EntityFrameworkCore"
    dbProjectName: "ISUCore.EntityFrameworkCore.csproj"
    isuNugetRepo: "http://nuget.isucore.com/v3/index.json"

# build:
    # stage: build
    # script:
        # - "dotnet nuget add source $isuNugetRepo -n nuget.isucore.com"
        # - "dotnet restore"
        # - 'dotnet build ISUCore.sln -c Debug'

#test:
#    stage: test
#    script:
#        - "cd test/ISUCore.Tests"
#        - "dotnet nuget add source $isuNugetRepo -n nuget.isucore.com"
#        - "dotnet test --configuration Debug"

deploy_staging:
    stage: deploy
    environment:
        name: staging
        url: https://cars-api.isucore.com:5007/
    before_script:
        - "apt-get update -qq && apt-get install -y -qq sshpass && apt-get -y install rsync"
    script:
        - "dotnet nuget add source $isuNugetRepo -n nuget.isucore.com"
        - "dotnet restore"
        - "dotnet publish $apiProjectPATH/$apiProjectName -c Debug -o bin/published"
        - "sshpass -V"
        - "export SSHPASS=$USER_PASS"
        - "export ASPNETCORE_ENVIRONMENT=Staging"
        - 'sshpass -e rsync -e "ssh -o StrictHostKeyChecking=no" -av --delete /builds/cars-isu/cars-dotnet/bin/published/ ubuntu@52.88.2.183:/var/www/html/cars-dotnet/'
        - "touch $apiProjectPATH/appsettings.json"
        - "cat $apiProjectPATH/appsettings.Staging.json > $apiProjectPATH/appsettings.json"
        - "dotnet tool install --global dotnet-ef"
        - 'export PATH="$PATH:/root/.dotnet/tools"'
        - "cd $dbProjectPATH"
        - "dotnet-ef database update --project $dbProjectName --configuration Debug --verbose"
        - "sshpass -e ssh ubuntu@52.88.2.183 'sudo service cars-core-dotnet restart'"
    artifacts:
        paths:
            - /builds/cars-isu/cars-dotnet/bin/published/
        expire_in: 8 hours
    only:
        - staging

#deploy_production:
#    stage: deploy
#    environment:
#        name: production
#        url: https://api.arryve.ca:5005/
#    before_script:
#        - "apt-get update -qq && apt-get install -y -qq sshpass && apt-get -y install rsync"
#    script:
#        - "dotnet nuget add source $isuNugetRepo -n nuget.isucore.com"
#        - "dotnet publish $apiProjectPATH/$apiProjectName -c Release -o bin/published"
#        - "sshpass -V"
#        - "export SSHPASS=$USER_PASS_CUSTOMER"
#        - "export ASPNETCORE_ENVIRONMENT=Production"
#        - 'sshpass -e rsync -e "ssh -o StrictHostKeyChecking=no" -av --delete /builds/cars-isu/cars-dotnet/bin/published/ ubuntu@3.97.83.11:/var/www/html/cars-dotnet/'
#        - "touch $apiProjectPATH/appsettings.json"
#        - "cat $apiProjectPATH/appsettings.Production.json > $apiProjectPATH/appsettings.json"
#        - "dotnet tool install --global dotnet-ef"
#        - 'export PATH="$PATH:/root/.dotnet/tools"'
#        - "cd $dbProjectPATH"
#        - "dotnet-ef database update --project $dbProjectName --configuration Release --verbose"
#        - "sshpass -e ssh ubuntu@3.97.83.11 'sudo service cars-core-dotnet restart'"
#    artifacts:
#        paths:
#            - /builds/cars-isu/cars-dotnet/bin/published/
#        expire_in: 8 hours
#    only:
#        - master